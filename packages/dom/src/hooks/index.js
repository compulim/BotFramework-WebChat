import { hooks } from 'botframework-webchat-component';

import { useMicrophoneButtonClick, useMicrophoneButtonDisabled } from '../SendBox/MicrophoneButton';
import { useSendBoxSpeechInterimsVisible } from '../BasicSendBox';
import { useTextBoxSubmit, useTextBoxValue } from '../SendBox/TextBox';
import { useTypingIndicatorVisible } from '../BasicTypingIndicator';

import useStyleSet from './useStyleSet';

export {
  useMicrophoneButtonClick,
  useMicrophoneButtonDisabled,
  useSendBoxSpeechInterimsVisible,
  useStyleSet,
  useTextBoxSubmit,
  useTextBoxValue,
  useTypingIndicatorVisible
};

// TODO: Find a better way to export hooks
const {
  useActiveTyping,
  useActivities,
  useAvatarForBot,
  useAvatarForUser,
  useByteFormatter,
  useConnectivityStatus,
  useDateFormatter,
  useDebouncedNotifications,
  useDictateInterims,
  useDictateState,
  useDirection,
  useDisabled,
  useDismissNotification,
  useEmitTypingIndicator,
  useFocus,
  useFocusSendBox,
  useGrammars,
  useGroupTimestamp,
  useLanguage,
  useLastTypingAt,
  useLocalize,
  useLocalizeDate,
  useLocalizer,
  useMarkActivityAsSpoken,
  usePerformCardAction,
  usePostActivity,
  useReferenceGrammarID,
  useRelativeTimeFormatter,
  useRenderActivity,
  useRenderActivityStatus,
  useRenderAttachment,
  useRenderAvatar,
  useRenderMarkdownAsHTML,
  useRenderToast,
  useRenderTypingIndicator,
  useScrollToEnd,
  useSendBoxValue,
  useSendEvent,
  useSendFiles,
  useSendMessage,
  useSendMessageBack,
  useSendPostBack,
  useSendTimeoutForActivity,
  useSendTypingIndicator,
  useSetNotification,
  useShouldSpeakIncomingActivity,
  useStartDictate,
  useStopDictate,
  useSubmitSendBox,
  useSuggestedActions,
  useStyleOptions,
  useTimeoutForSend,
  useTrackDimension,
  useTrackEvent,
  useTrackException,
  useTrackTiming,
  useUserID,
  useUsername,
  useVoiceSelector,
  useWebSpeechPonyfill
} = hooks;

export {
  useActiveTyping,
  useActivities,
  useAvatarForBot,
  useAvatarForUser,
  useByteFormatter,
  useConnectivityStatus,
  useDateFormatter,
  useDebouncedNotifications,
  useDictateInterims,
  useDictateState,
  useDirection,
  useDisabled,
  useDismissNotification,
  useEmitTypingIndicator,
  useFocus,
  useFocusSendBox,
  useGrammars,
  useGroupTimestamp,
  useLanguage,
  useLastTypingAt,
  useLocalize,
  useLocalizeDate,
  useLocalizer,
  useMarkActivityAsSpoken,
  usePerformCardAction,
  usePostActivity,
  useReferenceGrammarID,
  useRelativeTimeFormatter,
  useRenderActivity,
  useRenderActivityStatus,
  useRenderAttachment,
  useRenderAvatar,
  useRenderMarkdownAsHTML,
  useRenderToast,
  useRenderTypingIndicator,
  useScrollToEnd,
  useSendBoxValue,
  useSendEvent,
  useSendFiles,
  useSendMessage,
  useSendMessageBack,
  useSendPostBack,
  useSendTimeoutForActivity,
  useSendTypingIndicator,
  useSetNotification,
  useShouldSpeakIncomingActivity,
  useStartDictate,
  useStopDictate,
  useStyleOptions,
  useSubmitSendBox,
  useSuggestedActions,
  useTimeoutForSend,
  useTrackDimension,
  useTrackEvent,
  useTrackException,
  useTrackTiming,
  useUserID,
  useUsername,
  useVoiceSelector,
  useWebSpeechPonyfill
};
